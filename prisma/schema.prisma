// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id           Int      @id @default(autoincrement())
  title        String   @unique
  description  String?
  ingredients  String
  instructions String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Test {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Roles {
  id        Int      @id @default(autoincrement())
  name      String   @unique @default("NULL")
  role      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Departments {
  id         Int      @id @default(autoincrement())
  name       String   @unique @default("NULL")
  department User[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model College {
  id        Int      @id @default(autoincrement())
  name      String   @unique @default("NULL")
  college   User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id               Int           @id @default(autoincrement())
  firstname        String
  lastname         String
  hash             String
  email            String        @unique
  role             Roles?        @relation(fields: [roleId], references: [id])
  roleId           Int?
  department       Departments?  @relation(fields: [departmentId], references: [id])
  departmentId     Int?
  college          College?      @relation(fields: [collegeId], references: [id])
  collegeId        Int?
  requestFormsFrom RequestForm[] @relation("RequestFormFrom")
  requestFormsTo   RequestForm[] @relation("RequestFormTo")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model RequestForm {
  id        Int      @id @default(autoincrement())
  from      User     @relation("RequestFormFrom", fields: [fromId], references: [id])
  fromId    Int
  to        User     @relation("RequestFormTo", fields: [toId], references: [id])
  toId      Int
  email     String
  title     String
  replay    String?
  message   String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
